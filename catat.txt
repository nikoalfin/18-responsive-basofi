
nikoalfin@DESKTOP-QH32JFI MINGW64 ~/Music/Learn-git/multiple remote/18-responsive-basofi (master)
$ graph
bash: graph: command not found

nikoalfin@DESKTOP-QH32JFI MINGW64 ~/Music/Learn-git/multiple remote/18-responsive-basofi (master)
$ git status
On branch master
Your branch is ahead of 'origin/master' by 1 commit.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean

nikoalfin@DESKTOP-QH32JFI MINGW64 ~/Music/Learn-git/multiple remote/18-responsive-basofi (master)
$ alias graph="git log --all --decorate --oneline --graph"

nikoalfin@DESKTOP-QH32JFI MINGW64 ~/Music/Learn-git/multiple remote/18-responsive-basofi (master)
$ graph
* 40f52c0 (HEAD -> master, alfin/master) tambah file html
* dd23a3f (origin/master, origin/HEAD) hapus element html
* fa31590 tambah isi di html
* baf065a latihan website awal

nikoalfin@DESKTOP-QH32JFI MINGW64 ~/Music/Learn-git/multiple remote/18-responsive-basofi (master)
$ git status
On branch master
Your branch is ahead of 'origin/master' by 1 commit.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean

nikoalfin@DESKTOP-QH32JFI MINGW64 ~/Music/Learn-git/multiple remote/18-responsive-basofi (master)
$ git push -u origin master
Total 0 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/alfinsetyawan/18-responsive-basofi.git
 ! [remote rejected] master -> master (permission denied)
error: failed to push some refs to 'https://github.com/alfinsetyawan/18-responsive-basofi.git'

nikoalfin@DESKTOP-QH32JFI MINGW64 ~/Music/Learn-git/multiple remote/18-responsive-basofi (master)
$ git add .

nikoalfin@DESKTOP-QH32JFI MINGW64 ~/Music/Learn-git/multiple remote/18-responsive-basofi (master)
$ git commit -m"mboh"
On branch master
Your branch is ahead of 'origin/master' by 1 commit.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean

nikoalfin@DESKTOP-QH32JFI MINGW64 ~/Music/Learn-git/multiple remote/18-responsive-basofi (master)
$ git branch
* master

nikoalfin@DESKTOP-QH32JFI MINGW64 ~/Music/Learn-git/multiple remote/18-responsive-basofi (master)
$ git config
usage: git config [<options>]

Config file location
    --global              use global config file
    --system              use system config file
    --local               use repository config file
    --worktree            use per-worktree config file
    -f, --file <file>     use given config file
    --blob <blob-id>      read config from given blob object

Action
    --get                 get value: name [value-pattern]
    --get-all             get all values: key [value-pattern]
    --get-regexp          get values for regexp: name-regex [value-pattern]
    --get-urlmatch        get value specific for the URL: section[.var] URL
    --replace-all         replace all matching variables: name value [value-pattern]
    --add                 add a new variable: name value
    --unset               remove a variable: name [value-pattern]
    --unset-all           remove all matches: name [value-pattern]
    --rename-section      rename section: old-name new-name
    --remove-section      remove a section: name
    -l, --list            list all
    --fixed-value         use string equality when comparing values to 'value-pattern'
    -e, --edit            open an editor
    --get-color           find the color configured: slot [default]
    --get-colorbool       find the color setting: slot [stdout-is-tty]

Type
    -t, --type <type>     value is given this type
    --bool                value is "true" or "false"
    --int                 value is decimal number
    --bool-or-int         value is --bool or --int
    --bool-or-str         value is --bool or string
    --path                value is a path (file or directory name)
    --expiry-date         value is an expiry date

Other
    -z, --null            terminate values with NUL byte
    --name-only           show variable names only
    --includes            respect include directives on lookup
    --show-origin         show origin of config (file, standard input, blob, command line)
    --show-scope          show scope of config (worktree, local, global, system, command)
    --default <value>     with --get, use default value when missing entry


nikoalfin@DESKTOP-QH32JFI MINGW64 ~/Music/Learn-git/multiple remote/18-responsive-basofi (master)
$ git help
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           [--super-prefix=<path>] [--config-env=<name>=<envvar>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone     Clone a repository into a new directory
   init      Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   push      Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.

nikoalfin@DESKTOP-QH32JFI MINGW64 ~/Music/Learn-git/multiple remote/18-responsive-basofi (master)
$ git config --list
diff.astextplain.textconv=astextplain
filter.lfs.clean=git-lfs clean -- %f
filter.lfs.smudge=git-lfs smudge -- %f
filter.lfs.process=git-lfs filter-process
filter.lfs.required=true
http.sslbackend=openssl
http.sslcainfo=C:/Program Files/Git/mingw64/ssl/certs/ca-bundle.crt
core.autocrlf=true
core.fscache=true
core.symlinks=false
pull.rebase=false
credential.helper=manager-core
credential.https://dev.azure.com.usehttppath=true
init.defaultbranch=master
core.editor="C:\Users\nikoalfin\Desktop\Microsoft VS Code\bin\code" --wait
user.email=nikoalfinsetyawan@gmail.com
user.name=nikoalfin
core.repositoryformatversion=0
core.filemode=false
core.bare=false
core.logallrefupdates=true
core.symlinks=false
core.ignorecase=true
remote.origin.url=https://github.com/alfinsetyawan/18-responsive-basofi.git

nikoalfin@DESKTOP-QH32JFI MINGW64 ~/Music/Learn-git/multiple remote/18-responsive-basofi (master)
$ graph
* 40f52c0 (HEAD -> master, alfin/master) tambah file html
* dd23a3f (origin/master, origin/HEAD) hapus element html
* fa31590 tambah isi di html
* baf065a latihan website awal

nikoalfin@DESKTOP-QH32JFI MINGW64 ~/Music/Learn-git/multiple remote/18-responsive-basofi (master)
$ git config --global user.name "alfinsetyawan"

nikoalfin@DESKTOP-QH32JFI MINGW64 ~/Music/Learn-git/multiple remote/18-responsive-basofi (master)
$ git config --global user.email "nikoalfin22@gmail.com"

nikoalfin@DESKTOP-QH32JFI MINGW64 ~/Music/Learn-git/multiple remote/18-responsive-basofi (master)
$ git config --list
diff.astextplain.textconv=astextplain
filter.lfs.clean=git-lfs clean -- %f
filter.lfs.smudge=git-lfs smudge -- %f
filter.lfs.process=git-lfs filter-process
filter.lfs.required=true
http.sslbackend=openssl
http.sslcainfo=C:/Program Files/Git/mingw64/ssl/certs/ca-bundle.crt
core.autocrlf=true
core.fscache=true
core.symlinks=false
pull.rebase=false
credential.helper=manager-core
credential.https://dev.azure.com.usehttppath=true
init.defaultbranch=master
core.editor="C:\Users\nikoalfin\Desktop\Microsoft VS Code\bin\code" --wait
user.email=nikoalfin22@gmail.com
user.name=alfinsetyawan
core.repositoryformatversion=0
core.filemode=false
core.bare=false
core.logallrefupdates=true
core.symlinks=false
core.ignorecase=true

nikoalfin@DESKTOP-QH32JFI MINGW64 ~/Music/Learn-git/multiple remote/18-responsive-basofi (master)
$ graph
* 40f52c0 (HEAD -> master, alfin/master) tambah file html
* dd23a3f (origin/master, origin/HEAD) hapus element html
* fa31590 tambah isi di html
* baf065a latihan website awal

nikoalfin@DESKTOP-QH32JFI MINGW64 ~/Music/Learn-git/multiple remote/18-responsive-basofi (master)
$ git push -u origin master
Total 0 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/alfinsetyawan/18-responsive-basofi.git
 ! [remote rejected] master -> master (permission denied)
error: failed to push some refs to 'https://github.com/alfinsetyawan/18-responsive-basofi.git'

nikoalfin@DESKTOP-QH32JFI MINGW64 ~/Music/Learn-git/multiple remote/18-responsive-basofi (master)
$
